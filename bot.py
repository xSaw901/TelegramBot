import telebot
from telebot import types
import sqlite3

bot= telebot.TeleBot('5502078138:AAGgHgfqoxGjMhrIKZjirLP2ZJQ8ajPbOJw')

db= sqlite3.connect('server.db',check_same_thread=False)
sql = db.cursor()
sql.execute(""" Create table if Not exists rating(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    Summ DOUBLE NOT NULL,
    Rate DOUBLE NOT NULL,
    Count INTEGER NOT NULL
) """)
db.commit()

#—ç—Ç–æ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–æ–≥–æ —á—Ç–æ –Ω–∞–¥–æ –∏–∑ –±–∞–∑—ã
def output(catalog):
    i=0
    while i<len(catalog):
        b=0
        nullstr=''
        while b< len(catalog[i]):
            nullstr=nullstr+str(catalog[i][b])+", "
            b=b+1
        catalog[i]=nullstr
        i+=1
    return catalog

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    murkup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1= types.KeyboardButton("/help")
    btn2= types.KeyboardButton("/estimate")
    btn3= types.KeyboardButton("/rating")
    murkup.add(btn1, btn2, btn3)
    bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç", reply_markup=murkup)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∏–º–µ—é—â–∏–µ—Å—è –∫–æ–º–∞–Ω–¥—ã
@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.from_user.id, "/start-<b>–¢–∞–∫–∞—è —à—Ç—É–∫–∞ —á—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å –∏ —á—Ç–æ –±—ã –∫–Ω–æ–ø–æ—á–∫–∏ –ø–æ—è–≤–∏–ª–∏—Å—å</b>  \n /help-<b> –ù—É —Ç—É—Ç —è –Ω–∞–¥–µ—é—Å—å –æ–±—ä—è—Å–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–¥–æ</b>\n /estimate-<b>–ù—É —ç—Ç–æ –Ω–∞–¥–æ —á—Ç–æ –±—ã –æ—Ü–µ–Ω–∏—Ç—å –ø–ª—é—à–∫–∏ –≤—Å—è–∫–∏–µ, —Ç—ã–∫–Ω–∏, —Ç–∞–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫–∞–∫ –æ—Ü–µ–Ω–∏–≤–∞—Ç—å</b> \n /rating-<b>–ü—Ä–æ—Å—Ç–æ —Ä–µ–π—Ç–∏–Ω–≥ –≤—Å–µ—Ö –ø–ª—é—à–µ–∫, –≤—Å—ë —è—Å–Ω–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ</b>  ", parse_mode='html')

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /estimate, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∫ –æ—Ü–µ–Ω–∫–µ –∏ –∫–Ω–æ–ø–æ—á–∫—É –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ–≥–æ —Å–ø–∏—Å–∫–∞ –±—É–ª–æ—á–µ–∫
@bot.message_handler(commands=['estimate'])
def estimate(message):
    inline= types.InlineKeyboardMarkup()
    btn1= types.InlineKeyboardButton(text="–¢—ã–∫", callback_data="–°–ø–∏—Å–æ–∫")
    inline.add(btn1)
    bot.send_message(message.from_user.id, "–î–ª—è –æ—Ü–µ–Ω–∫–∏ –ø–∏—Ä–æ–∂–æ—á–∫–∞ –Ω–∞–¥–æ –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å /–æ—Ü–µ–Ω–∫–∞ <–æ—Ü–µ–Ω–∫–∞>(1-5) <–Ω–æ–º–µ—Ä –±—É–ª–æ—á–∫–∏>. –ï—Å–ª–∏ –ø–æ–Ω—è–ª(–∞) —Ç–æ —Ç—ã–∫–∞–π –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É —Ç–∞–º —Å–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç", reply_markup=inline)
a= sql.execute("select id, Name from rating")

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ—Ç –∫–æ–º–∞–Ω–¥—ã /estimate, –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
@bot.callback_query_handler(func=lambda message:True)
def inlin(message):
    if message.data == '–°–ø–∏—Å–æ–∫':
        catalog=[]
        
        catalog = list(sql.execute("select id, Name from rating"))
        bot.send_message(message.from_user.id, '\n'.join(output(catalog)))




# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /–æ—Ü–µ–Ω–∫–∞, –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É —Ç–æ–≤–∞—Ä—É
@bot.message_handler(commands=['–æ—Ü–µ–Ω–∫–∞'])
def evaluation(message):
    try:
        if len(message.text)>7:
            mes=message.text.split(" ")
            if int(mes[1])>5 or int(mes[1])<0 :
              bot.send_message(message.from_user.id, "–ü–æ —Ä—É—Å—Å–∫–∏ –∂–µ –Ω–∞–ø–∏—Å–∞–ª —á—Ç–æ –æ—Ç 1 –¥–æ 5 –æ—Ü–µ–Ω–∫—É —Å—Ç–∞–≤–∏—Ç—å üò°")
            else:
              sql.execute(f"update rating set Count=Count+1, Summ=Summ+{round(float(mes[1]),1)} where id ={int(mes[2])}")
              sql.execute(f"update rating set Rate=Summ/Count where id ={int(mes[2])}")
              db.commit()
              bot.send_message(message.from_user.id, "–ü—Ä–∏–Ω—è—Ç–æ")
        else:
               bot.send_message(message.from_user.id, "–ü–æ–Ω—è—Ç–∏—è –Ω–µ –∏–º–µ—é —á—Ç–æ —Ç–µ–±–µ –Ω–∞–¥–æ, –ø–∏—Å–∞—Ç—å –Ω—É–∂–Ω–æ /–æ—Ü–µ–Ω–∫–∞ <–Ω–æ–º–µ—Ä –±—É–ª–æ—á–∫–∏> <–æ—Ü–µ–Ω–∫–∞>")
    except:
        bot.send_message(message.from_user.id, "–ß—Ç–æ-—Ç–æ –ø–æ–ª–æ–º–∞–ª–æ—Å—å –±–ª–∏–Ω, –¥–∞–∂–µ –Ω–µ –∑–Ω–∞—é —á—Ç–æ. –ü–æ—Å–º—Ç—Ä–∏ –ø–æ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–π —á—Ç–æ –Ω–∞–ø–∏—Å–∞–ª.")

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–º–∞–Ω–¥—ã /rating, –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –±—É–ª–æ—á–µ–∫ —Å –∏—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–º
@bot.message_handler(commands=['rating'])
def rate(message):
    catalog=[]
    catalog = list(sql.execute("select Name, Rate from rating"))
    bot.send_message(message.from_user.id, '\n'.join(output(catalog)))

bot.polling(non_stop=True)


